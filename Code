#include <iostream>
#include <cstdlib> // For rand()
#include <ctime> // For time()
#include <limits> // For numeric_limits

using namespace std;

// Class definition for the CasinoGame
class CasinoGame {
private:
    int cash;         // Amount of cash the player bets
    int guess;        // Player's guessed number
    int randomNumber; // Random number generated by the game

public:
    // Constructor to initialize the random number generator
    CasinoGame() {
        srand(time(0)); // Seeds the random number generator with the current time
    }

    // Method to run the game
    void playGame() {
        // Display welcome message and disclaimer
        cout << "Welcome to Casino Royale!\n";
        cout << "**DISCLAIMER: Gambling is a bad activity, this game doesn't promote gambling, gamble in limit!!\n";
        cout << "In this game, you put a bet on a number.\n";
        cout << "If you're lucky you win 10 times the original amount...\n";
        cout << "Or else you lose the betted money!\n";
        cout << "You can't bet more than Rs10lakh" << endl;

        // Loop to get a valid cash amount from the user
        while (true) {
            cout << "NOW ENTER THE AMOUNT OF CASH YOU WANT TO PLAY WITH: Rs";
            cin >> cash;

            // Check if the input is valid and within the allowed range
            if (cin.fail() || cash <= 0 || cash > 1000000) {
                if (cin.fail()) {
                    cin.clear(); // Clear the error state
                    cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Ignore the invalid input
                    cout << "Invalid input.\n";
                } else if (cash <= 0) {
                    cout << "Sorry, you need to enter a positive amount of cash to play.\n";
                } else if (cash > 1000000) {
                    cout << "Sorry, you can't bet more than 10 lakhs; it's our policy.\n";
                }
                continue; // Prompt the user again for valid input
            }

            // If valid cash amount is entered, break out of the loop
            break;
        }

        // Display the amount of cash the user has bet
        cout << "Great! You have betted Rs" << cash << ".\n";

        // Loop to get a valid guess number from the user
        while (true) {
            cout << "Now, please enter a number between 1 and 10: ";
            cin >> guess;

            // Check if the input is valid and within the allowed range
            if (cin.fail() || guess < 1 || guess > 10) {
                if (cin.fail()) {
                    cin.clear(); // Clear the error state
                    cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Ignore the invalid input
                    cout << "Invalid input.\n";
                } else {
                    cout << "Sorry, you can only choose a number between 1 to 10.\n";
                }
                continue; // Prompt the user again for valid input
            }

            // If valid guess is entered, break out of the loop
            break;
        }

        // Generate a random number between 1 and 10
        randomNumber = rand() % 10 + 1;

        // Display the random number
        cout << "The random number is: " << randomNumber << endl;

        // Check if the user's guess matches the random number
        if (guess == randomNumber) {
            // User wins and gets 10 times the bet amount
            cout << "Congratulations! You guessed the correct number!\n";
            cout << "You win Rs" << cash * 10 << "!\n";
        } else {
            // User loses the bet amount
            cout << "Sorry, you didn't guess the correct number.\n";
            cout << "Hard Luck!!! You lose your Rs" << cash << ".\n";
            cout << "Better Luck Next Time\n";
        }
    }

    // Getter methods for accessing private members
    int getCash() {
        return cash;
    }

    int getGuess() {
        return guess;
    }

    int getRandomNumber() {
        return randomNumber;
    }
};

// Main function to run the program
int main() {
    CasinoGame game; // Create a CasinoGame object
    int choice;

    do {
        game.playGame(); // Start the game

        // Ask the user if they want to play again or exit
        while (true) {
            cout << "Do you want to play again? Enter 1 for yes or 0 for no: ";
            cin >> choice;

            // Check if the input is valid
            if (cin.fail() || (choice != 0 && choice != 1)) {
                cin.clear(); // Clear the error state
                cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Ignore the invalid input
                cout << "Invalid input. Please enter 0 or 1.\n";
            } else {
                break; // Valid input, break out of the loop
            }
        }

        if (choice == 0) {
            // Thank the user for playing
            cout << "Thank you for playing with us.\n";
            cout << "Have a nice day!! :)\n";
        }

    } while (choice == 1);

    return 0; // Exit program successfully
}
